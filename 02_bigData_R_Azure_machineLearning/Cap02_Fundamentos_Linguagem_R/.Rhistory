num1
num1
# Numeric - todos os numeros criados em R são do tipo Numeric
num1 <- 7
num1
class(num1)
mode(num1)
typeof(num'')
typeof(num1)
16.89
num2
16.89
num2
num2 = 16.89
num2
typeof(num2)
# Integer
# Convertendo tipo numeric para integer
is.integer(num2)
y = as.integer(num2)
class(y)
mode(y)
typeof(y)
typeof(y)
as.integer('3.14')
as.integer('Joe')
as.integer(TRUE)
as.integer(FALSE)
# cHARACTER
char1 = 'A'
char1
mode(char1)
typeof(char1)
char2 = 'Data Science'
char2
char3 = c('Data', 'Science', 'Academy')
char3
mosw(char3)
mode(char3)
typeof(char3)
# Complexo
compl = 2.6 + 4i
compl
sqrt(-1)
sqrt(-1)
# Logic
x = 1; y = 2
z = x > y
z
class(z)
u = TRUE ; v = FALSE
class(u)
u & v
u | v
!u
# VETOR
# 1 dimensão e 1 tipo de dado
vetor1 <- c(1:20)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
# Matriz: possui 2 dimensões e 1 tipo de dado
matriz1 <- matrix(1:20, nrow = 2)
matriz1
# Matriz: possui 2 dimensões e 1 tipo de dado
matriz1 <- matrix(1:20, nrow = 4)
matriz1
length(matriz1)
# Array: Possui 2 ou mais dimensões e 1 tipo de dado
array1 <- array(1:5, dim = c(3,3,3))
array1
length(array1)
mode(array1)
# DATAFRAME - Dados de diferentes tipos
View(iris)
mode(iris)
typeof(iris)
length(iris)
mode(iris)
typeof(iris)
# LISTAS: Coleção de diferentes objetos
lista1 = list(a = vetor1, b= matriz1)
lista1
mode(lista1)
length(lista1)
mode(lista1)
typeof(lista1)
return(var1)
func1(5)
(x){
# Funções também são objetos em R
func1 <- function(x){
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
# Removendo os objetos
objects()
rm(array1, func1)
objects()
# Vetor de String
vetor_char = c('Data', 'Science', 'Academy')
vetor_char
# Vetor de Floats
vetor_numeric = c(1.90, 2.54, 3.31)
vetor_numeric
# Vetor de valores complexos
vetor_complexo = c(5.2+3i, 3.8+4i)
vetor_complexo
# Vetor de valores logicos
vetor_logico = c(TRUE,TRUE,FALSE,TRUE,TRUE,FALSE)
vetor_logico
#vetor de numeros inteiros
vetor_integer = c(2,10,29)
vetor_integer
# Utilizando a função seq()
vetor1 = seq(1:10)
vetor2 = c(1:10)
vetor1
vetor2
# Utilizando a função rep()
vetorRep = rep(1:5)
vetorRep
is.vector(vetorRep)
# Indexação de vetores com R
a <- c(1,2,3,4,5,6)
a[1]
a[-1]
# Combinação de vetores
v1 =c(1,2,3,4.5)
# Combinação de vetores
v1 = c(1,2,3,4.5)
v2 = c('a', 'b', 'c')
c(v1,v2)
# Opeações com vetores
x = c(1,3,5,7)
y = c(2,4,6,8)
x/5
x+y
x-y
# Somando vetores com numero diferente de elementos
alfa =c(10,20,30)
# Somando vetores com numero diferente de elementos
alfa = c(10,20,30)
beta = c(1,2,3,4,5,6,7,8,9)
alfa + beta
names(v) = c('Nome', 'Sobrenome')
#### NOMEANDO UM VETOR com a função 'names()'
v = c("Nelson", "Mandela")
v
names(v) = c('Nome', 'Sobrenome')
v
v['Nome']
# Criando Matrizes
matrix(c(1,2,3,4,5,6) nr = 2)
# Criando Matrizes
matrix(c(1,2,3,4,5,6), nr = 2)
matrix(c('a', 'B', 'C', 'D', 'e'), nr = 3)
matrix(c('a', 'B', 'C', 'D', 'e', 'f'), nr = 3)
matrix(c(1,2,3,4,5,6), nr = 6)
# Número de colunas
matrix ( c (1,2,3,4,5,6), nc = 2)
# Help
?matrix
# Help
?matrix
# Criando matrizes a partir de vetores e preenchendo a partir das linhas
mesu_dados = c(1:10)
# Criando matrizes a partir de vetores e preenchendo a partir das linhas
meus_dados = c(1:10)
matrix(data = meus_dados), nr = 5, nc = 2, byrow = T)
matrix(data = meus_dados, nr = 5, nc = 2, byrow = T)
# Criando Matrizes NR = Número de linas
matrix(c(1,2,3,4,5,6), nr = 2)
matrix(c('a', 'B', 'C', 'D', 'e', 'f'), nr = 3)
matrix(c(1,2,3,4,5,6), nr = 6)
# Número de colunas = NC
matrix ( c (1,2,3,4,5,6), nc = 2)
# Help
?matrix
# Criando matrizes a partir de vetores e preenchendo a partir das linhas
meus_dados = c(1:10)
matrix(data = meus_dados, nr = 5, nc = 2, byrow = T)
matrix(data = meus_dados, nr = 5, nc = 2, byrow = T)
# Criando Matrizes NR = Número de linas
matrix(c(1,2,3,4,5,6), nr = 2)
matrix(c('a', 'B', 'C', 'D', 'e', 'f'), nr = 3)
# Criando Matrizes NR = Número de linas
matrix(c(1,2,3,4,5,6), nr = 2)
matrix(c('a', 'B', 'C', 'D', 'e', 'f'), nr = 3)
matrix(c(1,2,3,4,5,6), nr = 6)
# Número de colunas = NC
matrix ( c (1,2,3,4,5,6), nc = 2)
# Help
?matrix
# Criando matrizes a partir de vetores e preenchendo a partir das linhas
meus_dados = c(1:10)
matrix(data = meus_dados, nr = 5, nc = 2, byrow = T)
matrix(data = meus_dados, nr = 5, nc = 2, byrow = T)
