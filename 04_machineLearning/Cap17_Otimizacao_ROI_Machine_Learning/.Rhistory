# Pacotes
install.packages("PortfolioAnalytics")
install.packages("quantmod")
install.packages("PerformanceAnalytics")
install.packages("zoo")
install.packages("plotly")
library(PortfolioAnalytics)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(plotly)
# Obtendo os dados de ações de empresas listadas na bolsa de valores americana
getSymbols(c("MSFT", "SBUX", "IBM", "AAPL", "^GSPC", "AMZN"))
MSFT
# Criando um dataframe e ajustado o preço das ações
prices.data <- merge.zoo(MSFT[,6], SBUX[,6], IBM[,6], AAPL[,6], GSPC[,6], AMZN[,6])
# Calculando o retorno
returns.data <- CalculateReturns(prices.data)
returns.data <- na.omit(returns.data)
# Definindo os nomes
colnames(returns.data) <- c("MSFT", "SBUX", "IBM", "AAPL", "^GSPC", "AMZN")
# Salvando um vetor com a média de retorno e matriz de covariância
meanReturns <- colMeans(returns.data)
covMat <- cov(returns.data)
# Definindo o nome dos assets no portfólio de investimentos
# Isso define a especificação do portfólio
port <- portfolio.spec(assets = c("MSFT", "SBUX", "IBM", "AAPL", "^GSPC", "AMZN"))
# Box
port <- add.constraint(port, type = "box", min = 0.05, max = 0.8)
# Leverage
port <- add.constraint(portfolio = port, type = "full_investment")
# Gerando portfólios randômicos. Isso basicamente cria um conjunto de portfólio viáveis
# que satisfazem as condições (constraints)
# Lista de todas as constraints disponíveis:
# https://cran.r-project.org/web/packages/PortfolioAnalytics/vignettes/portfolio_vignette.pdf
rportfolios <- random_portfolios(port, permutations = 500000, rp_method = "sample")
